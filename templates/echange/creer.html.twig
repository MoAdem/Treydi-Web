{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .grid-container {
            display: flex;
            justify-content: space-between;
            margin: 0 100px;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-gap: 10px;
            padding: 10px;
            border: 1px solid black;
            max-height: 400px;
            max-width: 500px;
            overflow-y: auto;
        }


        .item {
            background-color: blue;
            width: 100px;
            height: 100px;
            cursor: pointer;
            border: 1px solid white;
            border-color: black;
        }

        #grid1 {
            grid-column: 1 / 3;
        }

        #grid2 {
            grid-column: 3 / 5;
        }
    </style>


{% endblock %}

{% block body %}
    <h1>Grid Example</h1>

    <div class="grid-container">
        <div class="grid" id="grid1">
            {% for item in user_items %}
                <div class="item" id="{{ item.id }}">{{ item.libelle }}</div>
            {% endfor %}
        </div>

        <div class="button-container">
            <button id="Creer_Echange">Creer Echange</button>
        </div>

        <div class="grid" id="grid2">
        </div>
    </div>

    <script>
        // Add event listeners to the objects
        const items = document.querySelectorAll('.item');
        items.forEach(obj => {
            obj.addEventListener('click', moveItem);
        });

        // Define a function to move objects between grids
        function moveItem(e) {
            // Get the object being moved
            const obj = e.target;

            // Find the current grid of the object
            const currentGrid = obj.closest('.grid');

            // Find the other grid
            const otherGrid = currentGrid.id === 'grid1' ? document.querySelector('#grid2') : document.querySelector('#grid1');

            // Move the object to the other grid
            otherGrid.appendChild(obj);

            // Adjust the grid template rows to fit the number of objects
            currentGrid.style.gridTemplateRows = `repeat(${Math.ceil(currentGrid.children.length / 1)}, 1fr)`;
            otherGrid.style.gridTemplateRows = `repeat(${Math.ceil(otherGrid.children.length / 1)}, 1fr)`;
        }
    </script>
{% endblock %}
