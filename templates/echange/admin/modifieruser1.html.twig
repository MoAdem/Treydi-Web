{% extends 'base.html.twig' %}

{% block title %}{{ parent() }}Article index{% endblock %}

{% block stylesheets %}
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&amp;display=swap"
          rel="stylesheet">

    <!-- Icons -->
    <link rel="stylesheet" href="{{ asset('assets/vendor/fonts/boxicons.css') }}"/>
    <link rel="stylesheet" href="{{ asset('assets/vendor/fonts/fontawesome.css') }}"/>
    <link rel="stylesheet" href="{{ asset('assets/vendor/fonts/flag-icons.css') }}"/>
    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('assets/vendor/css/rtl/core-dark.css') }}"
          class="template-customizer-core-css"/>
    <link rel="stylesheet" href="{{ asset('assets/vendor/css/rtl/theme-default-dark.css') }}"
          class="template-customizer-theme-css"/>
    <link rel="stylesheet" href="{{ asset('assets/css/demo.css') }}"/>

    <!-- Vendors CSS -->
    <style>
        .table-responsive {
            overflow-x: auto;
        }

        /* custom css that makes the table cell wrap if the text exceeds the cell length*/
        .table-responsive td {
            white-space: normal;
            text-align: justify;
        }

        ::-moz-selection { /* Code for Firefox */
            background: yellow;
        }

        ::selection {
            background: yellow;
        }

        #chose {
            width: 25px;

        }

        .grid-container {
            display: flex;
            justify-content: space-between;
            margin: 0 100px;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-gap: 10px;
            padding: 10px;
            border: 1px solid black;
            max-height: 400px;
            max-width: 500px;
            overflow-y: auto;
            min-width: 500px;
            min-height: 400px;
        }

        .item {
            background-color: #f1f1f1;
            width: 100px;
            height: 100px;
            cursor: pointer;
            border: 1px solid white;
            border-radius: 10px;
            padding: 10px;
            font-size: 14px;
            font-weight: bold;
            font-family: 'Arial', sans-serif;
            box-shadow: 2px 2px 5px #888;
            transition: background-color 0.2s ease-in-out;
        }

        .item:hover {
            background-color: #d9d9d9;
        }

        #grid1 {
            grid-column: 1 / 3;
        }

        #grid2 {
            grid-column: 3 / 5;
        }


        /*make the card the width of the screen available*/

    </style>
{% endblock %}


{% block javascripts %}
    <script src="{{ asset('assets/vendor/js/helpers.js') }}"></script>

    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Template customizer: To hide customizer set displayCustomizer value false in config.js.  -->
    <script src="{{ asset('public/assets/vendor/js/template-customizer.js') }}"></script>
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="{{ asset('assets/js/config.js') }}"></script>
    <script>


    </script>
{% endblock %}
{% block body %}

    <!-- Google Tag Manager (noscript) (Default ThemeSelection: GTM-5DDHKGP, PixInvent: GTM-5J3LMKC) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5DDHKGP" height="0" width="0"
                style="display: none; visibility: hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->

    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar  ">
        <div class="layout-container">
            <!-- Menu -->
            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
                {{ include('Dashboard_components/_menuDashboard.html.twig') }}
            </aside>

            <!-- / Menu -->
            <!-- Layout container -->
            <div class="layout-page">

                <!-- Navbar -->
                {{ include('Dashboard_components/_navbarDashboard.html.twig') }}
                <!-- / Navbar -->

                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <!-- Content -->
                        {{ form_start(formA, {'attr': {'id': 'formA'}}) }}
                        <div class="card" style="padding-bottom: 10px; ">
                            <div class="grid-container" style="display: flex; flex-direction: row;">
                                <div class = "text-center">
                                    User Items
                                <div class="grid" id="grid1">
                                    {% for item in user1_items %}
                                        <div class="item" id="{{ item.id }}">{{ item.libelle }}</div>
                                    {% endfor %}
                                </div></div>
                                <div class = "text-center">
                                    Echange Items
                                <div class="grid" id="grid2">
                                    {% for item in user1_items_in_echange %}
                                        <div class="item" id="{{ item.id }}">{{ item.libelle }}</div>
                                    {% endfor %}
                                </div>
                                </div></div>
                            <div class = "align-content-center">{{ form_row(formA.confirmer) }}</div>

                        </div>
                    </div>
                    <input type="hidden" id="items1" name="items1[]" value="">
                    <input type="hidden" id="items2" name="items2[]" value="">
                    <div>
                        {{ form_end(formA) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Core JS -->
    <!-- build:js assets/vendor/js/core.js -->
    <script src="{{ asset('/assets/vendor/libs/jquery/jquery.js') }}"></script>

    <script src="{{ asset('/assets/vendor/libs/popper/popper.js') }}"></script>

    <script src="{{ asset('/assets/vendor/js/bootstrap.js') }}"></script>

    <script src="{{ asset('/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>

    <script src="{{ asset('/assets/vendor/libs/hammer/hammer.js') }}"></script>

    <script src="{{ asset('/assets/vendor/libs/i18n/i18n.js') }}"></script>

    <script src="{{ asset('/assets/vendor/libs/typeahead-js/typeahead.js') }}"></script>

    <script src="{{ asset('/assets/vendor/js/menu.js') }}"></script>

    <!-- endbuild -->

    <!-- Vendors JS -->

    <!-- Vendors JS -->

    <!-- Main JS -->
    <script src="{{ asset('/assets/js/maindash.js') }}"></script>

    <!-- Page JS -->

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const items = document.querySelectorAll('.item');
            items.forEach(obj => {
                obj.addEventListener('click', moveItem);
            });


            function moveItem(e) {
                const obj = e.target;

                const currentGrid = obj.closest('.grid');

                const otherGrid = currentGrid.id === 'grid1' ? document.querySelector('#grid2') : document.querySelector('#grid1');

                otherGrid.appendChild(obj);

                currentGrid.style.gridTemplateRows = `repeat(${Math.ceil(currentGrid.children.length / 1)}, 1fr)`;
                otherGrid.style.gridTemplateRows = `repeat(${Math.ceil(otherGrid.children.length / 1)}, 1fr)`;
            }

            const form = document.querySelector('#formA');
            form.addEventListener('submit', (e) => {
                e.preventDefault();

                const selectedItems = [];
                const grid2Items = document.querySelectorAll('#grid2 .item');
                grid2Items.forEach(item => {
                    selectedItems.push(item.id);
                });

                const userItems = [];
                const grid1Items = document.querySelectorAll('#grid1 .item');
                grid1Items.forEach(item => {
                    userItems.push(item.id);
                });

                const itemsInput = document.querySelector('#items1');
                itemsInput.value = JSON.stringify(selectedItems);

                const userItemsInput = document.querySelector('#items2');
                userItemsInput.value = JSON.stringify(userItems);
                form.submit();
            });
        });

    </script>
{% endblock %}
